nodrill1shell=sum(No.Drill.1,na.rm=T),
nodrill2shell=sum(No.Drill.1,na.rm=T),
drills=(drill1shell/2+drill2shell),
nodrills=(nodrill1shell/2+nodrill2shell),
N=round(drills+nodrills),
prop=(drills/N))
View(drsum)
ggplot(drsum,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
ggplot(groys, aes(x=Date,y=mean_length,color=Pop))+
geom_point(size=2)+geom_line(size=1)+
geom_errorbar(aes(ymin=mean_length-se,ymax=mean_length+se),color="black",width=10)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation",y="Mean Shell Length (mm)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))+
ylim(0,40)
ggplot(drsum,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
View(drsum)
drsum<-ddply(drill,.(Date,Pop),summarise,drill1shell=sum(Drill.1.Shell,na.rm=T),
drill2shell=sum(Drill.2.shell,na.rm=T),
nodrill1shell=sum(No.Drill.1,na.rm=T),
nodrill2shell=sum(No.Drill.2,na.rm=T),
drills=(drill1shell/2+drill2shell),
nodrills=(nodrill1shell/2+nodrill2shell),
N=round(drills+nodrills),
prop=(drills/N))
ggplot(drsum,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
View(drsum)
size2<-lmer(endy1$Length.mm~endy1$Pop2*endy1$Site+(endy1$Pop2|endy1$Tray))
y1size=read.csv('./data/Size-outplant-end-all-2013-14.csv')
#check data
View(y1size)
#make R understand dates
y1size$Date<-as.Date(y1size$Date, "%m/%d/%Y")
#create table of ave size for outplant and year one for each pop at each site
y1meansize<-ddply(y1size,.(Date,Site,Pop),summarise, mean_size=mean(Length.mm,na.rm=T))
#print it out
print(y1meansize)
#create at DF with Average size for Each Site
y1sitemeansize<-ddply(y1size,.(Date,Site),summarise, mean_size=mean(Length.mm,na.rm=T))
#print it out
print(y1sitemeansize)
#produce some descriptive statistics using stat describe
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
#print it out, stats are in the order (mean, STD Error, 95% Confidence Interval, Variance, STD Deviation)
print(y1sitestats)
#now we need to create subsets for each site for out plant and end of year 1
outmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Manchester")
outfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Fidalgo")
outoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Oyster Bay")
endmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-24"&Site=="Manchester")
endfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-17"&Site=="Fidalgo")
endoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-09-19"&Site=="Oyster Bay")
size2<-lmer(endy1$Length.mm~endy1$Pop2*endy1$Site+(endy1$Pop2|endy1$Tray))
summary(size2)
size3<-lmer(endy1$Length.mm~endy1$Pop2*endy1$Site+(1|endy1$Tray))
summary(size3)
y1size=read.csv('./data/Size-outplant-end-all-2013-14.csv')
#check data
View(y1size)
y1size$Date<-as.Date(y1size$Date, "%m/%d/%Y")
y1meansize<-ddply(y1size,.(Date,Site,Pop),summarise, mean_size=mean(Length.mm,na.rm=T))
print(y1meansize)
y1sitemeansize<-ddply(y1size,.(Date,Site),summarise, mean_size=mean(Length.mm,na.rm=T))
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
require(ggplot2)
require(plyr)
require(splitstackshape)
require(nparcomp)
require(PMCMR)
require(pastecs)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
print(y1sitestats)
outmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Manchester")
outfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Fidalgo")
outoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Oyster Bay")
endmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-24"&Site=="Manchester")
endfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-17"&Site=="Fidalgo")
endoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-09-19"&Site=="Oyster Bay")
endy1<-ddply(y1size,.(Length.mm,Site,Pop,Tray,Sample,Area,Pop2),subset,Date>="2014-09-19")
y1size$Pop2<-y1size$Pop
y1size$Pop2<-revalue(y1size$Pop2,c("1H"="H","2H"="H","4H"="H","1N"="N","2N"="N","4N"="N","1S"="S","2S"="S","4S"="S"))
#Here we subset the data set to only include data from the end of year 1
endy1<-ddply(y1size,.(Length.mm,Site,Pop,Tray,Sample,Area,Pop2),subset,Date>="2014-09-19")
size2<-lmer(endy1$Length.mm~endy1$Pop2*endy1$Site+(endy1$Pop2|endy1$Tray))
size3<-lmer(endy1$Length.mm~endy1$Pop2*endy1$Site+(1|endy1$Tray))
summary(size2)
summary(size3)
anova(size2,size3)
anova(size2)
anova.lme(size2)
??anova.lme
??lmerTest::anova
anova(size2, type=3)
anova(size2, type=1)
anova(size2, ddf="Kenward-Roger")
anova(size2, ddf="lme4")
require(lmerTest)
anova(size2, ddf="lme4")
anova(size2)
??afex::mixed
require(afex)
mixed(endy1$Length.mm~endy1$Pop2*endy1$Site+(endy1$Pop2|endy1$Tray),data=endy1)
mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
??glm
drglm<-glm(drsum$N~drsum$drills*drsum$nodrills,family="logit",data=drsum)
drglm<-glm(N~drills*nodrills,family="logit",data=drsum)
drglm<-glm(N~drills*nodrills,family=binomial(logit),data=drsum)
drglm<-glm(Pop~drills*nodrills,family=binomial(logit),data=drsum)
summary(drglm)
drglm<-glm((cbind(drills,nodrills))~Pop,family=binomial(logit),data=drsum)
drglm<-glm((cbind(round(drills),round(nodrills))~Pop,family=binomial(logit),data=drsum)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
anova(drglm, test="Chisq")
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=quasibinomial(logit),data=drsum)
summary(drglm)
anova(drglm, test="F")
drglm<-glm.nb((cbind(round(drills),round(nodrills)))~Pop,data=drsum)
??glm.nb
require(MASS)
drglm<-glm.nb((cbind(round(drills),round(nodrills)))~Pop,data=drsum)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
summary(drglm,dispersion=1.44627,correlation=T,symbolic.cor=T)
??dispmod
install.packages("dispmod")
require(dispmod)
??dispmod
drglm<-glm.binomial.disp(drglm)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm,dispersion=1.44627,correlation=T,symbolic.cor=T)
summary(drglm)
drglm.mod<-glm.binomial.disp(drglm)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=quasibinomial(logit),data=drsum)
summary(drglm)
ciMult<-qt(0.975/2+.5,gratemean$N-1)
gratemean$ci<-gratemean$se*ciMult
View(gratemean)
grfid<-gratemean[which(gratemean$Site=="Fidalgo"& gratemean$Date<="2014-05-02"|gratemean$Site=="Fidalgo"&gratemean$Date>="2014-09-19"),]
grman<-gratemean[which(gratemean$Site=="Manchester"& gratemean$Date<="2014-05-02"|gratemean$Site=="Manchester"&gratemean$Date>="2014-09-19"),]
groys<-gratemean[which(gratemean$Site=="Oyster Bay"& gratemean$Date<="2014-05-02"|gratemean$Site=="Oyster Bay"&gratemean$Date>="2014-09-19"),]
ggplot(grfid, aes(x=Date,y=mean_length,color=Pop))+
geom_point(size=2)+geom_line(size=1)+
geom_errorbar(aes(ymin=mean_length-ci,ymax=mean_length+ci),color="black",width=10)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation",y="Mean Shell Length (mm)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))+
ylim(0,40)
ggplot(grman, aes(x=Date,y=mean_length,color=Pop))+
geom_point(size=2)+geom_line(size=1)+
geom_errorbar(aes(ymin=mean_length-ci,ymax=mean_length+ci),color="black",width=10)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation",y="Mean Shell Length (mm)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))+
ylim(0,40)
ggplot(groys, aes(x=Date,y=mean_length,color=Pop))+
geom_point(size=2)+geom_line(size=1)+
geom_errorbar(aes(ymin=mean_length-ci,ymax=mean_length+ci),color="black",width=10)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation",y="Mean Shell Length (mm)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))+
ylim(0,40)
mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
sizep<-mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
lsmeans(sizep, pairwise~Pop2*Site, adjust="tukey")
lsmeans(size2, pairwise~Pop2*Site, adjust="tukey")
??lsmeans
lsmeans(size2, test.effs="Pop2:Site")
post<-lsmeans(size2, test.effs="Pop2:Site")
summary(post)
post<-lsmeans(size2, test.effs="Pop2:Site",adjust="tukey")
summary(post)
post
citation(dispmod)
citation("dispmod")
citation("lme4")
summary(size2)
size2
sizep<-mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
sizep
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=quasibinomial(logit),data=drsum)
summary(drglm,dispersion=1.44627,correlation=T,symbolic.cor=T)
drglm.mod<-glm.binomial.disp(drglm)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
drglm.mod<-glm.binomial.disp(drglm)
daby1edit<-read.csv("./data/Dabob-temp-2014.csv")
#reads in edited CSV with raw data.
daby1edit$Date<-as.Date(daby1edit$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
dabmeantemp<-ddply(daby1edit,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Dabob
many1v3<-read.csv('./data/Manchester-temp-2014.csv')
#reads in edited CSV with raw data.
many1v3$Date<-as.Date(many1v3$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
manmeantemp<-ddply(many1v3,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Manchester
fidy1v3<-read.csv("./data/Fidalgo-temp-2014.csv")
#reads in edited CSV with raw data.
fidy1v3$Date<-as.Date(fidy1v3$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
fidmeantemp<-ddply(fidy1v3,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Fidalgo
oysy1edit<-read.csv("./data/OysterBay-temp-2014.csv")
#reads in edited CSV with raw data.
oysy1edit$Date<-as.Date(oysy1edit$Date, "%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
oysmeantemp<-ddply(oysy1edit,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Oyster Bay
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=mean_temp, group=1),col="forestgreen",size=1,guide=T)+
geom_line(data=manmeantemp, aes(x=Date, y=mean_temp, group=1),col="blue",size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=mean_temp, group=1),col="purple",size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=mean_temp, group=1),col="orange",size=1)+
labs(x="Date",y="Average Daily Temperature (C)")+
theme_bw()+theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Creates a graph with each line representing average daily temps for each site
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=mean_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=mean_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=mean_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=mean_temp, group=1, colour="4"),size=1)+
geom_hline(aes(yintercept=12.5,colour="5"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange","red"),
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Average Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.15),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Creates a graph with each line representing average daily temps for each site also adds red line to indicate Spawning threshold
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=min_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=min_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=min_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=min_temp, group=1, colour="4"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange"),
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Minimum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.18),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Creates a graph with each line representing observed minimum daily temps for each site
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=max_temp, group=1, colour="1",linetype=6),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=max_temp, group=1, colour="2",linetype=5),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=max_temp, group=1, colour="3",linetype=1),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=max_temp, group=1, colour="4",linetype=5),size=1)+
scale_linetype_identity()+
scale_colour_grey(start=0, end=.8,
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Maximum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.25,0.8),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Creates a graph with each line representing observed maximum daily temps for each site
#Dates Min Temp met Spawn Threshold
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 & format(oysmeantemp$Date,"%Y")=="2014"),]
manspawntemp<-manmeantemp[(manmeantemp$min_temp >= 12.5 & format(manmeantemp$Date,"%Y")=="2014"),]
fidspawntemp<-fidmeantemp[(fidmeantemp$min_temp >= 12.5 & format(fidmeantemp$Date,"%Y")=="2014"),]
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=max_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=max_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=max_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=max_temp, group=1, colour="4"),size=1)+
scale_linetype_identity()+
scale_colour_grey(start=0, end=.8,
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Maximum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.25,0.8),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=min_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=min_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=min_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=min_temp, group=1, colour="4"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange"),
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Minimum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.18),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=min_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=min_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=min_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=min_temp, group=1, colour="4"),size=1)+
scale_colour_grey(start=0, end=.8,
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Minimum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.18),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Creates a graph with each line representing observed minimum daily temps for each site
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=max_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=max_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=max_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=max_temp, group=1, colour="4"),size=1)+
scale_colour_grey(start=0, end=.8,
name="Site",
labels=c("Hood Canal","Central","Northern","Southern"))+
labs(x="Date",y="Maximum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.25,0.8),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
citation("afex")
