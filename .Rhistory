load("~/R/sizestuff/LAEnvwithSizeclass.RData")
library(survival)
kmdab=read.csv("KMdataDabob.csv")
names(kmdab)
with(kmdab, tapply(Death[Status==1],Population[Status==1],mean))
with(kmdab, tapply(Death[Status==1],Population[Status==1],var))
fit1=with(kmdab,survfit(Surv(Death,Status)~Population))
plot(fit1, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving")
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmman=read.csv("KMdataMan.csv")
names(kmman)
with(kmman, tapply(Death[Status==1],Population[Status==1],mean))
with(kmman, tapply(Death[Status==1],Population[Status==1],var))
fit2=with(kmman, survfit(Surv(Death,Status)~Population))
plot(fit2, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving")
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmfid=read.csv("KMdataFid.csv")
with(kmfid, tapply(Death[Status==1],Population[Status==1],mean))
with(kmfid, tapply(Death[Status==1],Population[Status==1],var))
fit3=with(kmfid, survfit(Surv(Death,Status)~Population))
plot(fit3, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving")
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmoys=read.csv("KMdataOys.csv")
with(kmoys, tapply(Death[Status==1],Population[Status==1],mean))
with(kmoys, tapply(Death[Status==1],Population[Status==1],var))
fit4=with(kmoys, survfit(Surv(Death,Status)~Population))
plot(fit4, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving")
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
?axis
plot(fit1, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3, xaxt="n" )
axis(1, xaxp=c(0,2,4,6,8,10))
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
plot(fit1, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3, xaxt="n" )
axis(1, at=c(0,2,4,6,8,10),labels=T)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
plot(fit1,xaxt="n", col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3)
plot(fit1, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3)
axis(1, at=c(0,2,4,6,8,10),labels=T)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
plot(fit1,xlim=(0,10) col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3)
plot(fit1,xlim=c(0,10) col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3)
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=3)
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=10)
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=5)
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=1)
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
library(survival)
kmdab=read.csv("KMdataDabob.csv")
names(kmdab)
with(kmdab, tapply(Death[Status==1],Population[Status==1],mean))
with(kmdab, tapply(Death[Status==1],Population[Status==1],var))
fit1=with(kmdab,survfit(Surv(Death,Status)~Population))
plot(fit1,xlim=c(0,10), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmman=read.csv("KMdataMan.csv")
names(kmman)
with(kmman, tapply(Death[Status==1],Population[Status==1],mean))
with(kmman, tapply(Death[Status==1],Population[Status==1],var))
fit2=with(kmman, survfit(Surv(Death,Status)~Population))
plot(fit2, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmfid=read.csv("KMdataFid.csv")
with(kmfid, tapply(Death[Status==1],Population[Status==1],mean))
with(kmfid, tapply(Death[Status==1],Population[Status==1],var))
fit3=with(kmfid, survfit(Surv(Death,Status)~Population))
plot(fit3, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
kmoys=read.csv("KMdataOys.csv")
with(kmoys, tapply(Death[Status==1],Population[Status==1],mean))
with(kmoys, tapply(Death[Status==1],Population[Status==1],var))
fit4=with(kmoys, survfit(Surv(Death,Status)~Population))
plot(fit4, col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
plot(fit1,xlim=c(0,11), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
plot(fit1,xlim=c(0,12), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
plot(fit1,xlim=c(0,11), col=c("#3366CC","#CC66CC","#FF9900"), xlab="Survival Time from Outplant in Months", ylab="% Surviving", lwd=2)
legend("bottomleft", title="Population", c("Dabob","Fidalgo","Oyster Bay"), fill=c("#3366CC","#CC66CC","#FF9900"))
ggplot(data=manrep, aes(x=Date, y=Percent, group=Pop, colour=Pop, fill=Pop))+geom_line(size=1.5)+geom_point()+ylim(c(0,15))+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))+scale_fill_manual(values=c("#3366CC","#CC66CC","#FF9900"))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))+ggtitle("Percent Brooders\nManchester")+theme(legend.title=element_blank())+theme(plot.title = element_text(size=20, face="bold", vjust=1, lineheight=0.6))
library(ggplot2)
library(ggplot2)
ggplot(data=manrep, aes(x=Date, y=Percent, group=Pop, colour=Pop, fill=Pop))+geom_line(size=1.5)+geom_point()+ylim(c(0,15))+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))+scale_fill_manual(values=c("#3366CC","#CC66CC","#FF9900"))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))+ggtitle("Percent Brooders\nManchester")+theme(legend.title=element_blank())+theme(plot.title = element_text(size=20, face="bold", vjust=1, lineheight=0.6))
ggplot()+geom_density(data=outoys, aes(x=Length.mm, group=Tray_1, colour=Tray_1, fill=Tray_1),alpha=0.3)+geom_density(data=endoys, aes(x=Length.mm, group=Tray_1, colour=Tray_1, fill=Tray_1),alpha=0.3)+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))+scale_fill_manual(values=c("#3366CC","#CC66CC","#FF9900"))+ggtitle("Size Comparison\nAugust 2013 vs. August 2014")
ggplot()+geom_density(data=outoys, aes(x=Length.mm, group=Tray_1, colour=Tray_1, fill=Tray_1),alpha=0.3)+geom_density(data=endoys, aes(x=Length.mm, group=Tray_1, colour=Tray_1, fill=Tray_1),alpha=0.3)+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))+scale_fill_manual(values=c("#3366CC","#CC66CC","#FF9900"))+ggtitle("Size Comparison\nAugust 2013 vs. August 2014")
ggplot(aes(endoys,x=Length.mm)+(outoys,x=Size))+geom_density(aes(group=Tray_1, colour=Tray_1),alpha=0.3)+facet_wrap(~Tray_1, ncol=1)+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))+scale_fill_manual(values=c("#3366CC","#CC66CC","#FF9900"))
ggplot(mansize, aes(Date,Length.mm, group=Tray_1, color=Tray_1))+geom_point()+geom_smooth(method=lm)+scale_colour_manual(values=c("#3366CC","#CC66CC","#FF9900"))
require(plyr)
require(ggplot2)
View(outman)
meanoutsizes<-ddply(outman,.(Tray_1),summarise, mean_size=mean(Size,na.rm=T))
View(meanoutsizes)
meanoutoyssizes<-ddply(outoys,.(Tray_1),summarise, mean_size=mean(Size,na.rm=T))
meanoutfidsizes<-ddply(outfid,.(Tray_1),summarise, mean_size=mean(Size,na.rm=T))
View(outoys)
View(outfid)
meanoutoyssizes<-ddply(outoys,.(Tray_1),summarise, mean_size=mean(Length.mm,na.rm=T))
View(meanoutoyssizes)
View(meanoutfidsizes)
View(meanoutsizes)
meanendmansizes<-ddply(endman,.(Tray_1),summarise, mean_size=mean(Length.mm,na.rm=T))
meanendoyssizes<-ddply(endoys,.(Tray_1),summarise, mean_size=mean(Length.mm,na.rm=T))
meanendfidsizes<-ddply(endfid,.(Tray_1),summarise, mean_size=mean(Length.mm,na.rm=T))
View(meanendfidsizes)
View(meanendmansizes)
View(meanendoyssizes)
setwd("~/R/TempData/Temp-Data-And-Scripts")
require(ggplot2)
require(plyr)
require(splitstackshape)
require(nparcomp)
require(PMCMR)
y1size=read.csv('./data/Size-outplant-end-all-2013-14.csv')
y1size$Date<-as.Date(y1size$Date, "%m/%d/%Y")
y1size$Date<-as.Date(y1size$Date, "%m/%d/%Y")
y1meansize<-ddply(y1size,.(Date,Site,Pop),summarise, mean_size=mean(Length.mm,na.rm=T))
outmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Manchester")
outfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Fidalgo")
outoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Oyster Bay")
endmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-24"&Site=="Manchester")
endfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-17"&Site=="Fidalgo")
endoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-09-19"&Site=="Oyster Bay")
normality<-ddply(y1size,.(Date,Site,Pop),summarize,n=length(Length.mm),sw=shapiro.test(as.numeric(Length.mm))[2])
y1size$Pop2<-y1size$Pop
y1size$Pop2<-revalue(y1size$Pop2,c("1H"="H","2H"="H","4H"="H","1N"="N","2N"="N","4N"="N","1S"="S","2S"="S","4S"="S"))
endy1<-ddply(y1size,.(Length.mm,Site,Pop,Tray,Sample,Area,Pop2),subset,Date>="2014-09-19")
normality<-ddply(endy1,.(Date,Site,Pop),summarize,n=length(Length.mm),sw=shapiro.test(as.numeric(Length.mm))[2])
View(normality)
sizekw<-kruskal.test(endy1$Length.mm~endy1$Site,endy1)
print(sizekw)
sizenemenyi1<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Site, method="Tukey")
sizenemenyi1
sizenemenyi2<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Pop2, method="Tukey")
sizenemenyi2
sizenemenyi3<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Site:endy1$Pop2, method="Tukey")
sizenemenyi3
brood<-read.csv("./data/Brood-numbers-all-2014.csv")
brood$Date<-as.Date(brood$Date, "%m/%d/%Y")
View(brood)
BroodANOVA<-aov(brooder$Percent~brood$Site+brood$Pop+brood$Site:brood$Population,brood)
BroodANOVA<-aov(brood$Percent~brood$Site+brood$Pop+brood$Site:brood$Population,brood)
BroodANOVA<-aov(brood$Percent~brood$Site+brood$Pop+brood$Site:brood$Pop,brood)
View(BroodANOVA)
print(BroodANOVA)
broodTukey<-TukeyHSD(BroodANOVA)
print(broodTukey)
help ('survival')
??survival
mansum<-summary(survfit(Surv(Death,Status)~Population,data=kmman,rho=1))
mansum<-summary(survfit(Surv(Death,Status)~Population,data=kmman))
print(mansum)
mansurv<-survdiff(Surv(Death,Status)~Population,data=kmman,rho=1)
print(mansurv)
dabsum<-summary(survfit(Surv(Death,Status)~Population,data=kmdab))
print(dabsum)
daby1edit<-read.csv("./data/Dabob-temp-2014.csv")
#reads in edited CSV with raw data.
daby1edit$Date<-as.Date(daby1edit$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
dabmeantemp<-ddply(daby1edit,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Dabob
many1v3<-read.csv('./data/Manchester-temp-2014.csv')
#reads in edited CSV with raw data.
many1v3$Date<-as.Date(many1v3$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
manmeantemp<-ddply(many1v3,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Manchester
fidy1v3<-read.csv("./data/Fidalgo-temp-2014.csv")
#reads in edited CSV with raw data.
fidy1v3$Date<-as.Date(fidy1v3$Date,"%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
fidmeantemp<-ddply(fidy1v3,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Fidalgo
oysy1edit<-read.csv("./data/OysterBay-temp-2014.csv")
#reads in edited CSV with raw data.
oysy1edit$Date<-as.Date(oysy1edit$Date, "%m/%d/%Y")
#Tells R that the date column contains dates so it knows how to deal with them
oysmeantemp<-ddply(oysy1edit,.(Date),summarise,mean_temp=mean(Temp,na.rm=T),min_temp=min(Temp,na.rm=T),max_temp=max(Temp,na.rm=T))
#finds the mean, minimum, and maximum daily temps from raw data and creates dataframe with them for Oyster Bay
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=mean_temp, group=1),col="forestgreen",size=1,guide=T)+
geom_line(data=manmeantemp, aes(x=Date, y=mean_temp, group=1),col="blue",size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=mean_temp, group=1),col="purple",size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=mean_temp, group=1),col="orange",size=1)+
labs(x="Date",y="Average Daily Temperature (C)")+
theme_bw()
#Creates a graph with each line representing average daily temps for each site
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=mean_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=mean_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=mean_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=mean_temp, group=1, colour="4"),size=1)+
geom_hline(aes(yintercept=12.5,colour="5"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange","red"),
name="Site",
labels=c("Dabob Bay","Clam Bay","Fidalgo Bay","Oyster Bay","Spawn Thresh"))+
labs(x="Date",y="Average Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.15),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))
#Creates a graph with each line representing average daily temps for each site also adds red line to indicate Spawning threshold
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=min_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=min_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=min_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=min_temp, group=1, colour="4"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange"),
name="Site",
labels=c("Dabob Bay","Clam Bay","Fidalgo Bay","Oyster Bay","Spawn Thresh"))+
labs(x="Date",y="Minimum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.13,0.18),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))
#Creates a graph with each line representing observed minimum daily temps for each site
ggplot()+
geom_line(data=dabmeantemp, aes(x=Date, y=max_temp, group=1, colour="1"),size=1)+
geom_line(data=manmeantemp, aes(x=Date, y=max_temp, group=1, colour="2"),size=1)+
geom_line(data=fidmeantemp, aes(x=Date, y=max_temp, group=1, colour="3"),size=1)+
geom_line(data=oysmeantemp, aes(x=Date, y=max_temp, group=1, colour="4"),size=1)+
scale_colour_manual(values=c("forestgreen","blue","purple","orange"),
name="Site",
labels=c("Dabob Bay","Clam Bay","Fidalgo Bay","Oyster Bay","Spawn Thresh"))+
labs(x="Date",y="Maximum Daily Temperature (C)")+
theme_bw()+
theme(legend.position=c(0.25,0.8),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
axis.text.x=element_text(size=20),
axis.title.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=20))
#Creates a graph with each line representing observed maximum daily temps for each site
??ddply
View(oysmeantemp)
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5 & oysmeantemp$Date == 2014,]
View(oysspawntemp)
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5,]
View(oysspawntemp)
manspawntemp<-manmeantemp[manmeantemp$min_temp >= 12.5,]
fidspawntemp<-fidmeantemp[fidmeantemp$min_temp >= 12.5,]
View(manspawntemp)
View(fidspawntemp)
View(fidspawntemp)
fidspawntemp<-fidmeantemp[fidmeantemp$min_temp >= 12.0,]
View(fidspawntemp)
y1sitemeansize<-ddply(y1size,.(Date,Site),summarise, mean_size=mean(Length.mm,na.rm=T))
print(y1sitemeansize)
require(pastecs)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
print(y1sitestats)
View(`y1sitestats`)
stat.desc(broodsizes)
stat.desc(brood)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(1,9,10,11,12,13)])
print(y1sitestats)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(2,9,10,11,12,13)])
print(y1sitestats)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
print(y1sitestats)
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5,oysmeantemp$Date=as.Date(2014)]
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5,oysmeantemp$Date = as.Date("2014")]
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5 & oysmeantemp$Date = as.Date("2014"),]
oysspawntemp<-oysmeantemp[oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date = as.Date("2014"),]
oysspawntemp<-oysmeantemp[which(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date = as.Date("2014")),]
oysspawntemp<-oysmeantemp[ which (oysmeantemp$min_temp >= 12.5 & oysmeantemp$Date = as.Date("2014")),]
oysspawntemp<-oysmeantemp[ which (oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date=as.Date("2014")),]
oysspawntemp<-oysmeantemp[which(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date=as.Date("2014")),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date=as.Date("2014")),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date=as.Date("2014-?-?")),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date=as.Date(2014)),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | oysmeantemp$Date==as.Date(2014)),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | as.Date(oysmeantemp$Date, format="%Y/%m/%d")$year==2014),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | as.Date(oysmeantemp$Date, format="%Y/%m/%d")year==2014),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | as.POSIXlt(oysmeantemp$Date, format="%Y/%m/%d")$year==2014),]
View(oysspawntemp)
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 | as.POSIX(oysmeantemp$Date, format="%Y/%m/%d")$year==2014),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 & format(oysmeantemp$Date,"%Y")=="2014"),]
View(oysspawntemp)
manspawntemp<-manmeantemp[manmeantemp$min_temp >= 12.5 & format(manmeantemp$Date,"%Y")=="2014"),]
oysspawntemp<-oysmeantemp[(oysmeantemp$min_temp >= 12.5 & format(oysmeantemp$Date,"%Y")=="2014"),]
as.Date(manspawntemp, "%Y/%m/%d")
as.Date(manspawntemp$Date, "%Y/%m/%d")
manspawntemp<-as.Date(manspawntemp$Date, "%Y/%m/%d")
manspawntemp<-manmeantemp[manmeantemp$min_temp >= 12.5 & format(manmeantemp$Date,"%Y")=="2014"),]
manspawntemp<-manmeantemp[(manmeantemp$min_temp >= 12.5 & format(manmeantemp$Date,"%Y")=="2014"),]
fidspawntemp<-fidmeantemp[(fidmeantemp$min_temp >= 12.5 & format(fidmeantemp$Date,"%Y")=="2014"),]
View(fidspawntemp)
View(manspawntemp)
