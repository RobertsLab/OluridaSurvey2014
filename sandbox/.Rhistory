require(lme4)
require(plyr)
require(ggplot2)
require(dispmod)
setwd("/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox")
drill<-read.csv("../data/Drill-mortality-2013-2014-consolidated.csv",header=T)
drill$Date<-as.factor(as.Date(drill$Date, "%m/%d/%Y"))
ggplot(drill,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
View(drill)
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=(sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N))
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=(sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N)
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N)
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N))
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N))
View(drsum)
ggplot(drsum,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
drglm.mod<-glm.binomial.disp(drglm)
drill<-read.csv("../data/Drill-mortality-2013-2014-consolidated.csv",header=T)
drill$Date<-as.factor(as.Date(drill$Date, "%m/%d/%Y"))
drsum<-ddply(drill,.(Date,Pop),summarise,
drills=sum(Drill,na.rm=T),
nodrills=sum(NoDrill,na.rm=T),
N=round(drills+nodrills),
prop=(drills/N))
ggplot(drsum,aes(x=Date,y=prop,colour=Pop, fill=Pop))+
geom_bar(stat="identity",position=position_dodge())+
geom_text(aes(label=N), color="black",
stat="identity",position=position_dodge(width=0.9),
vjust=-0.25)+
scale_colour_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
scale_fill_grey(start=0, end=.9,labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+labs(x="Observation Date",y="Oysters with Drill Holes (proportion)")+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
theme(legend.justification=c(0,1),
legend.position=c(0,1),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20),
legend.title=element_text(size=20),
legend.text=element_text(size=20))
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
drglm.mod<-glm.binomial.disp(drglm)
require(ggplot2)
require(plyr)
require(splitstackshape)
install.packages("splitstackshape")
require(splitstackshape)
setwd("/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox")
grate<-read.csv("../data/ImageJ-size-data-2013-2014.csv",header=T)
grate1<-cSplit(grate, "Tray", sep=" ", drop=F)
grate1$Pop[1:9215]<-grate1$Tray_1[1:9215]
grate1$Tray2[1:9215]<-grate1$Tray_2[1:9215]
grate1$Site<-gsub("manchester","Manchester",grate1$Site)
grate1$Tray<-NULL
grate1$Tray_1<-NULL
grate1$Tray_2<-NULL
grate1$Date<-as.Date(grate1$Date, "%m/%d/%Y")
View(grate1)
gratemean<-ddply(grate1,.(Date,Pop,Site),summarise,mean_length=mean(Length.mm,na.rm=T),
sd=sd(Length.mm,na.rm=T), N=length(Length.mm),se=sd/sqrt(N))
ciMult<-qt(0.975/2+.5,gratemean$N-1)
gratemean$ci<-gratemean$se*ciMult
View(gratemean)
View(gratemean)
View(gratemean)
View(gratemean)
View(gratemean)
View(gratemean)
save.image("~/git-repos/RobertsLab-OluridaSurvey2014/sandbox/env.RData")
View(gratemean)
View(gratemean)
grfid<-gratemean[which(gratemean$Site=="Fidalgo"& gratemean$Date<="2014-05-02"|gratemean$Site=="Fidalgo"&gratemean$Date>="2014-09-19"),]
grman<-gratemean[which(gratemean$Site=="Manchester"& gratemean$Date<="2014-05-02"|gratemean$Site=="Manchester"&gratemean$Date>="2014-09-19"),]
groys<-gratemean[which(gratemean$Site=="Oyster Bay"& gratemean$Date<="2014-05-02"|gratemean$Site=="Oyster Bay"&gratemean$Date>="2014-09-19"),]
View(grfid)
write.csv2(x, file = "grfid")
write.csv2(file = "grfid")
write.csv2(grfid)
write.csv2(grfid, file = "")
write.csv2(grfid, file = "/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox/test")
write.csv2(grfid, file = "/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox/grfid.csv")
write.csv2(grfid, file = "/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox/grfid.csv" , append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
View(grman)
View(groys)
View(grman)
View(drsum)
drglm<-glm((cbind(round(drills),round(nodrills)))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
drglm<-glm((cbind(drills,nodrills))~Pop,family=binomial(logit),data=drsum)
summary(drglm)
View(gratemean)
install.packages("nparcomp")
install.packages("PMCMR")
install.packages("afex")
require(ggplot2)
require(plyr)
require(splitstackshape)
require(nparcomp)
require(PMCMR)
require(pastecs)
require(afex)
setwd("/Users/sr320/git-repos/RobertsLab-OluridaSurvey2014/sandbox")
y1size=read.csv('../data/Size-outplant-end-all-2013-14.csv')
View(y1size)
y1size$Date<-as.Date(y1size$Date, "%m/%d/%Y")
y1meansize<-ddply(y1size,.(Date,Site,Pop),summarise, mean_size=mean(Length.mm,na.rm=T))
print(y1meansize)
y1sitemeansize<-ddply(y1size,.(Date,Site),summarise, mean_size=mean(Length.mm,na.rm=T))
print(y1sitemeansize)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
sizelme<-lmer(Length.mm~Pop2*Site+(~Pop2|Tray))
sizelme
sizep<-mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
sizep
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
install.packages("ggplot2")
install.packages("plyr")
install.packages("splitstackshape")
install.packages("ggplot2")
print(y1sitemeansize)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
View(y1size)
library(help = "stats")
require(pastecs)
("pastecs")
require(pastecs)
install.packages("pastecs")
require(pastecs)
y1sitestats<-ddply(y1size,.(Date, Site),summarise, stats=stat.desc(Length.mm)[c(9,10,11,12,13)])
print(y1sitestats)
outmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Manchester")
outfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Fidalgo")
outoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2013-08-16"&Site=="Oyster Bay")
endmany1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-24"&Site=="Manchester")
endfidy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-10-17"&Site=="Fidalgo")
endoysy1<-ddply(y1size,.(Length.mm,Pop,Tray,Sample,Area),subset,Date=="2014-09-19"&Site=="Oyster Bay")
sizelme<-lmer(Length.mm~Pop2*Site+(~Pop2|Tray))
sizelme
sizep<-mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
sizep
#using ggplot2 to create Boxplots
ggplot()+
geom_boxplot(data=endmany1,aes(x=Pop,y=Length.mm,fill=Pop))+
scale_colour_grey(start=0, end=0.9,guide=F)+
scale_fill_grey(start=0, end=0.9, guide=F)+
ylim(c(0,50))+
labs(x="Population",y="Length (mm)")+
scale_x_discrete(labels=c("Dabob Bay","Fidalgo Bay","Oyster Bay"))+
annotate("text", x=c("4N","4H","4S"),y=50, label=c("A","B","A"),size=10)+
theme_bw()+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplot()+
geom_boxplot(data=endfidy1,aes(x=Pop,y=Length.mm,fill=Pop))+
scale_colour_grey(start=0, end=0.9,guide=F)+
scale_fill_grey(start=0, end=0.9, guide=F)+
ylim(c(0,50))+
labs(x="Population",y="Length (mm)")+
scale_x_discrete(labels=c("Dabob Bay","Fidalgo Bay","Oyster Bay"))+
annotate("text", x=c("2N","2H","2S"),y=50, label=c("A","B","A"),size=10)+
theme_bw()+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplot()+
geom_boxplot(data=endoysy1,aes(x=Pop,y=Length.mm,fill=Pop))+
scale_colour_grey(start=0, end=0.9,guide=F)+
scale_fill_grey(start=0, end=0.9, guide=F)+
ylim(c(0,50))+
labs(x="Population",y="Length (mm)")+
scale_x_discrete(labels=c("Dabob Bay","Fidalgo Bay","Oyster Bay"))+
annotate("text", x=c("1N","1H","1S"),y=50, label=c("B","A","A"),size=10)+
theme_bw()+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#Check Data for Normality
normality<-ddply(y1size,.(Date,Site,Pop),summarize,n=length(Length.mm),sw=shapiro.test(as.numeric(Length.mm))[2])
#Data is not normally distributed based on P-Values from Shapiro Wilkes test.
#Create New column with Pop labels for analysis
y1size$Pop2<-y1size$Pop
y1size$Pop2<-revalue(y1size$Pop2,c("1H"="H","2H"="H","4H"="H","1N"="N","2N"="N","4N"="N","1S"="S","2S"="S","4S"="S"))
#Here we subset the data set to only include data from the end of year 1
endy1<-ddply(y1size,.(Length.mm,Site,Pop,Tray,Sample,Area,Pop2),subset,Date>="2014-09-19")
#check for Normality again
normality<-ddply(endy1,.(Date,Site,Pop),summarize,n=length(Length.mm),sw=shapiro.test(as.numeric(Length.mm))[2])
#Still Not normal, must use nonparametric test.
#using size data from the final sampling for Kruskal Wallis test to compare size versus site
sizekw<-kruskal.test(endy1$Length.mm~endy1$Site,endy1)
print(sizekw)
#using size data from the final sampling for Kruskal Wallis test to compare size versus Population
sizekwpop<-kruskal.test(endy1$Length.mm~endy1$Pop2,endy1)
print(sizekwpop)
#Using the size data to produce a Post Hoc Nemenyi Test to generate p-values for each comparison for Size vs Site
sizenemenyi1<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Site, method="Tukey")
sizenemenyi1
#Using the size data to produce a Post Hoc Nemenyi Test to generate p-values for each comparison for Size vs Population
sizenemenyi2<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Pop2, method="Tukey")
sizenemenyi2
#Using the size data to produce a Post Hoc Nemenyi Test to generate p-values for each comparison for Size vs Site/Population Interaction
sizenemenyi3<-posthoc.kruskal.nemenyi.test(x=endy1$Length.mm,g=endy1$Site:endy1$Pop2, method="Tukey")
sizenemenyi3
#Brooder Size Data
broodersizes<-read.csv('./data/Brooder-sizes-2014.csv')
#Let R know what format dates are in
broodersizes$Date<-as.Date(broodersizes$Date,"%m/%d/%Y")
#Run ANOVA on Brooding female size
brdszaov<-aov(broodersizes$Size~broodersizes$Site+broodersizes$Population+broodersizes$Site:broodersizes$Population,broodersizes)
print(brdszaov)
summary(brdszaov)
#Run TukeyHSD post hoc on Brooding Female Sizes
tkbrdsz<-TukeyHSD(brdszaov)
print(tkbrdsz)
#Dotplot for Brooding Female Sizes
ggplot(broodersizes, aes(x=Site, fill=Population, y=Size))+
geom_dotplot(binwidth=0.5,binaxis='y',stackdir="center", position=position_dodge(width=0.5))+
scale_fill_grey(start=0, end=.9, labels=c("Dabob","Fidalgo","Oyster Bay"))+
theme_bw()+
labs(x="Site",y="Length (mm)")+
scale_x_discrete(labels=c("Northern","Central","Southern"))+
theme(axis.text.x=element_text(size=20),
axis.title.x=element_text(size=25, vjust=0.1),
axis.title.y=element_text(size=25, vjust=2),
axis.text.y=element_text(size=20),
legend.justification=c(0,1),
legend.position=c(0,1),
legend.title=element_text(size=15),
legend.text=element_text(size=15))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
#mixed effects models with p-value generation
sizelme<-lmer(Length.mm~Pop2*Site+(~Pop2|Tray))
sizelme
sizep<-mixed(Length.mm~Pop2*Site+(Pop2|Tray),data=endy1)
sizep
View(y1size)
View(endy1)
View(endy1)
View(gratemean)
write.table(grate1, "grate1.txt", row.names = FALSE, sep="\t")
